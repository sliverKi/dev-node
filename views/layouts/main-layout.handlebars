<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ docTitle }}</title>
    <link rel="stylesheet" href="/css/main.css">
    {{#if formCSS}}
    <link rel="stylesheet" href="/css/form.css">
    {{/if}}
    {{#if productCSS}}
    <link rel="stylesheet" href="/css/product.css">
    {{/if}}
</head>
<body>
    <header class="main-header">
        <nav class="main-header__nav">
            <ul class="main-header__item-list">
                <li class='main-header__item'><a class="{{#if activeShop }}active{{/if}}" href="/">Shop</a></li>
                <li class='main-header__item'><a class="{{#if activeAddProduct }}active{{/if}}" href="/admin/add-product">Add Product</a></li>
            </ul>
        </nav>
    </header>
    {{{body}}}
   
</body>
</html>

{{!-- Handlebars: 논리작성 불가 ~> 단일 속성, 단일 변수또는 값만 출력 가능 (Pug와 차이점) 
   true/false를 출력하는 키만 지원함 따라서 {{ prods.length>0}} 직접 비교 불가
    hbs에는 pug와 달리 block이 없기 때문에 모두 if 문으로 처리를 해주어야 하기 때문 
    동적 데이터는 {{...}}로 묶어 주고, if문은 {{#if}}~{{/if}} 사용, 또한 header아래 각각 다른 main body를 삽입할 것이므로 placeholder사용에는 {{{...}}}사용
    layout:false의미: 핸드러가 사용하는 특별한 키, HTML 파일 대신 js 템플릿으로 반환을 강제함
    ~> main-layout에 정의함 공통 부분을 생략하게 되고 각 파일에는 main-body에 해당하는 코드로 파일 유지 보수를 보다 용이하게 할 수 있음  --}}